CREATE SCHEMA IF NOT EXISTS LEO AUTHORIZATION postgres;

CREATE TABLE IF NOT EXISTS PRODUCT_CATEGORY (
    ID SERIAL,
    NAME VARCHAR( 50 ) UNIQUE NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL,
    CREATED_BY VARCHAR( 50 ) NOT NULL,
    UPDATED_AT TIMESTAMP,
    UPDATED_BY VARCHAR( 255 ),

    PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS MANUFACTURER(
    ID SERIAL,
    CREATED_AT TIMESTAMP NOT NULL,
    CREATED_BY VARCHAR( 50 ) NOT NULL,
    UPDATED_AT TIMESTAMP,
    UPDATED_BY VARCHAR( 255 ),

    PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS PRODUCT (
    ID SERIAL,
    FK_PRODUCT_CATEGORY_ID INT NOT NULL,
    FK_MANUFACTURER_ID INT NOT NULL,
    DESCRIPTION VARCHAR( 255 ) NOT NULL,
    CODE_REF VARCHAR( 255 ) NOT NULL,
    IMAGE_URL VARCHAR( 255 ) NOT NULL,
    WEIGHT NUMERIC( 2 ) NOT NULL,
    WEIGHT_MEASUREMENT VARCHAR( 10 ) NOT NULL,
    DIMENSION_WIDTH NUMERIC( 2 ) NOT NULL,
    DIMENSION_HEIGHT NUMERIC( 2 ) NOT NULL,
    DIMENSION_LENGHT NUMERIC( 2 ) NOT NULL,
    DIMENSION_MEASUREMENT VARCHAR( 10 ) NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL,
    CREATED_BY VARCHAR( 50 ) NOT NULL,
    UPDATED_AT TIMESTAMP,
    UPDATED_BY VARCHAR( 255 ),

    PRIMARY KEY (ID),
    FOREIGN KEY(FK_PRODUCT_CATEGORY_ID) REFERENCES PRODUCT_CATEGORY(ID),
    FOREIGN KEY(FK_MANUFACTURER_ID) REFERENCES MANUFACTURER(ID)
);

CREATE TABLE IF NOT EXISTS OFFER (
    ID SERIAL,
    FK_PRODUCT_ID INT NOT NULL,
    PRICE_REAL NUMERIC( 4 ) NOT NULL,
    ISSUE_DATE TIMESTAMP NOT NULL,
    OFF_PERCENT NUMERIC( 4 ) NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL,
    CREATED_BY VARCHAR( 50 ) NOT NULL,
    UPDATED_AT TIMESTAMP,
    UPDATED_BY VARCHAR( 255 ),
    
    FOREIGN KEY(FK_PRODUCT_ID) REFERENCES PRODUCT(ID)
);

CREATE TABLE IF NOT EXISTS TICKET_PROMOTION (
    ID SERIAL,
    EXPIRATION TIMESTAMP NOT NULL,
    OFF_PERCENT NUMERIC( 4 ) NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL,
    CREATED_BY VARCHAR( 50 ) NOT NULL,
    UPDATED_AT TIMESTAMP,
    UPDATED_BY VARCHAR( 255 ),

    PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS ACCOUNT (
    ID SERIAL,
    FIRST_NAME VARCHAR( 50 ) NOT NULL,
    LAST_NAME VARCHAR( 255 ) NOT NULL,
    BIRTH_DATE TIMESTAMP NOT NULL,
    EMAIL VARCHAR( 255 ) UNIQUE NOT NULL,
    USERNAME VARCHAR( 255 ) UNIQUE NOT NULL,
    LAST_LOGIN TIMESTAMP NOT NULL,
    DOCUMENT_NUMBER VARCHAR( 255 ) UNIQUE NOT NULL,
    PHONE_NUMBER VARCHAR( 255 ) NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL,
    CREATED_BY VARCHAR( 50 ) NOT NULL,
    UPDATED_AT TIMESTAMP,
    UPDATED_BY VARCHAR( 255 ),

    PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS ADDRESS (
    ID SERIAL,
    FK_ACCOUNT_ID INT NOT NULL,
    PUBLIC_PLACE TEXT NOT NULL,
    HOME_NUMBER INTEGER NOT NULL,
    FULLFILMENT VARCHAR( 255 ),
    DISTRICT VARCHAR( 50 ) NOT NULL,
    CITY VARCHAR( 50 ) NOT NULL,
    CEP VARCHAR( 50 ) NOT NULL,
    STATE_UF VARCHAR( 50 ) NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL,
    CREATED_BY VARCHAR( 50 ) NOT NULL,
    UPDATED_AT TIMESTAMP,
    UPDATED_BY VARCHAR( 255 ),

    PRIMARY KEY (ID),
    FOREIGN KEY(FK_ACCOUNT_ID) REFERENCES ACCOUNT(ID)
);

CREATE TABLE IF NOT EXISTS TYPE_PAYMENT(
    ID SERIAL,
    NAME VARCHAR( 50 ) UNIQUE NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL,
    CREATED_BY VARCHAR( 50 ) NOT NULL,
    UPDATED_AT TIMESTAMP,
    UPDATED_BY VARCHAR( 255 ),

    PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS STATUS_PACKAGE(
    ID SERIAL,
    IS_ACTIVE BOOLEAN NOT NULL,
    NAME VARCHAR( 50 ) UNIQUE NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL,
    CREATED_BY VARCHAR( 50 ) NOT NULL,
    UPDATED_AT TIMESTAMP,
    UPDATED_BY VARCHAR( 255 ),

    PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS PACKAGE (
    ID SERIAL,
    FK_ACCOUNT_ID INT NOT NULL,
    FK_ADDRESS_ID INT NOT NULL,
    FK_TYPE_PAYMENT_ID INT NOT NULL,
    FK_STATUS_PACKAGE_ID INT NOT NULL,
    DEST_NAME VARCHAR( 255 ) NOT NULL,
    ISSUE_DATE TIMESTAMP NOT NULL,
    TOTAL_VALUE NUMERIC( 4 ) NOT NULL,
    IS_OPEN BOOLEAN NOT NULL,
    NFE VARCHAR( 255 ),
    NFE_URL_STORAGE VARCHAR( 255 ),
    CREATED_AT TIMESTAMP NOT NULL,
    CREATED_BY VARCHAR( 50 ) NOT NULL,
    UPDATED_AT TIMESTAMP,
    UPDATED_BY VARCHAR( 255 ),

    PRIMARY KEY (ID),
    FOREIGN KEY(FK_ACCOUNT_ID) REFERENCES ACCOUNT(ID),
    FOREIGN KEY(FK_ADDRESS_ID) REFERENCES ADDRESS(ID),
    FOREIGN KEY(FK_TYPE_PAYMENT_ID) REFERENCES TYPE_PAYMENT(ID),
    FOREIGN KEY(FK_STATUS_PACKAGE_ID) REFERENCES STATUS_PACKAGE(ID)
);

CREATE TABLE IF NOT EXISTS STOCK (
    ID SERIAL,
    FK_PRODUCT_ID INT NOT NULL,
    SKU VARCHAR( 50 ) NOT NULL,
    IS_ACTIVE BOOLEAN NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL,
    CREATED_BY VARCHAR( 50 ) NOT NULL,
    UPDATED_AT TIMESTAMP,
    UPDATED_BY VARCHAR( 255 ),

    PRIMARY KEY (ID),
    FOREIGN KEY (FK_PRODUCT_ID) REFERENCES PRODUCT(ID)
);